1. 필수 Util 설치
```
dnf install dnf-utils unzip tar git wget curl fontconfig 

```
2. JDK 설치 및 MAVEN 설치
```
# JDK 다운로드 및 설치
curl -o openjdk.rpm https://builds.openlogic.com/downloadJDK/openlogic-openjdk/8u402-b06/openlogic-openjdk-8u402-b06-linux-x64-el.rpm && \
    yum install -y openjdk.rpm && \
    rm -rf openjdk.rpm

# 다운로드 및 설치할 Maven 버전 및 URL
MAVEN_VERSION="3.6.3"
MAVEN_URL="https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz"
# 설치 디렉토리
INSTALL_DIR="/usr/local/maven"
# Maven 다운로드 및 압축 해제
mkdir -p ${INSTALL_DIR}
curl -fsSL ${MAVEN_URL} -o /tmp/apache-maven.tar.gz
tar -xzf /tmp/apache-maven.tar.gz -C ${INSTALL_DIR} --strip-components=1
rm -f /tmp/apache-maven.tar.gz
# Maven 환경 변수 설정
echo "export MAVEN_HOME=${INSTALL_DIR}" >> /etc/profile
echo "export PATH=\$PATH:\$MAVEN_HOME/bin" >> /etc/profile
# 환경 변수 적용
source /etc/profile
echo "Maven ${MAVEN_VERSION} 설치가 완료되었습니다."

```
3. Docker 설치
```
dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 

dnf -y install docker-ce

sudo systemctl --now enable docker
```
3. Selinux 비활성화
```
# selinux disable
vi /etc/selinux/config

#SELINUX=enforcing 
SELINUX=disabled

## SELinux확인
sestatus

setenforce 0
```
4. Jenkins 계정 생성 및 설치
- 디렉토리 생성
```
# Jenkins 사용자 생성 및 패스워드 설정
groupadd -g 1003 jenkins
sudo useradd --system --home /var/lib/jenkins --shell /bin/bash -g jenkins -u 1003 jenkins
echo "jenkins:Asdf1234" | sudo chpasswd

# 디렉토리 생성
cd /var/lib
mkdir jenkins
chown jenkins:jenkins jenkins
cd /opt
mkdir jenkins
chown jenkins:jenkins jenkins

# JEKNINS_HOME 지정
export JENKINS_HOME=/var/lib/jenkins

source /etc/profile
```
- docker group에 jenkins 추가, 이외 계정 추가
```
cat /etc/group
usermod -aG docker jenkins
-a는 append, -G는 보조그룹
```

- 설치 스크립트
```
#!/bin/bash

# Jenkins 버전 및 URL
# curl -fsSL https://get.jenkins.io/war-stable/2.346.3/jenkins.war -o /opt/jenkins/jenkins.war
JENKINS_VERSION="2.346.3"
JENKINS_URL="https://get.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war"

# Jenkins Home 디렉토리
JENKINS_HOME="/var/lib/jenkins"

# Jenkins 설치 디렉토리 및 war 파일 다운로드
JENKINS_INSTALL_DIR="/opt/jenkins"
sudo mkdir -p $JENKINS_INSTALL_DIR
sudo curl -fsSL $JENKINS_URL -o $JENKINS_INSTALL_DIR/jenkins.war

# Jenkins 실행을 위한 systemd 서비스 파일 생성
sudo tee /etc/systemd/system/jenkins.service > /dev/null <<EOF
[Unit]
Description=Jenkins Continuous Integration Server
Wants=network-online.target
After=network-online.target

[Service]
User=jenkins
Group=jenkins
ExecStart=java -jar /opt/jenkins/jenkins.war -DJEKNINS_HOME=/var/lib/jenkins --httpPort=8080
Restart=always
RestartSec=30
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=jenkins

[Install]
WantedBy=multi-user.target
EOF

# Jenkins Home 디렉토리 권한 설정
sudo chown -R jenkins:jenkins $JENKINS_HOME

# 서비스 시작 및 활성화
sudo systemctl daemon-reload
sudo systemctl start jenkins
sudo systemctl enable jenkins
```
- admin 비밀번호 변경 '1234'
- Global Config 에서 권한 anyone 으로 변경 ( 임시 )


5. Jenkins Plugin 설치
- https://updates.jenkins-ci.org/download/plugins/
- jenkins-cli.jar 파일 다운로드 필요
- wget http://192.168.126.128:8080/jnlpJars/jenkins-cli.jar
- chown jenkins:jenkins jenkins-cli.jar

```
-- Maven Integration Plugin real
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/maven-plugin/3.22/maven-plugin.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/javadoc/217.v905b_86277a_2a_/javadoc.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/commons-lang3-api/3.12.0-36.vd97de6465d5b_/commons-lang3-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/junit/1119.va_a_5e9068da_d7/junit.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/apache-httpcomponents-client-4-api/4.5.13-1.0/apache-httpcomponents-client-4-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jsch/0.1.55.2/jsch.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/mailer/414.vcc4c33714601/mailer.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/ssh-credentials/1.14/ssh-credentials.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/plugin-util-api/2.16.0/plugin-util-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/checks-api/1.7.4/checks-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/workflow-api/1144.v61c3180fa_03f/workflow-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jackson2-api/2.13.2.20220328-273.v11d70a_b_a_1a_52/jackson2-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/bootstrap5-api/5.1.3-6/bootstrap5-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/display-url-api/2.3.6/display-url-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/workflow-step-api/625.vd896b_f445a_f8/workflow-step-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/echarts-api/5.3.2-1/echarts-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/display-url-api/2.3.5/display-url-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/credentials/2.1.17/credentials.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/font-awesome-api/6.0.0-1/font-awesome-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/popper2-api/2.11.2-1/popper2-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/structs/308.v852b473a2b8c/structs.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/workflow-step-api/625.vd896b_f445a_f8/workflow-step-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/snakeyaml-api/1.29.1/snakeyaml-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/trilead-api/1.0.5/trilead-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/workflow-support/813.vb_d7c3d2984a_0/workflow-support.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jquery3-api/3.6.0-2/jquery3-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/scm-api/602.v6a_81757a_31d2/scm-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/display-url-api/2.3.6/display-url-api.hpi


-- Git 
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/git/4.14.3/git.hpi && \ 
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/workflow-scm-step/400.v6b_89a_1317c9a_/workflow-scm-step.hpi && \ 
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/mailer/435.438.v5b_81173f5b_a_1/mailer.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/workflow-step-api/639.v6eca_cd8c04a_a_/workflow-step-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/script-security/1218.v39ca_7f7ed0a_c/script-security.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/ssh-credentials/305.v8f4381501156/ssh-credentials.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/scm-api/621.vda_a_b_055e58f7/scm-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/credentials/1143.vb_e8b_b_ceee347/credentials.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/credentials-binding/523.vd859a_4b_122e6/credentials-binding.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/structs/324.va_f5d6774f3a_d/structs.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/git-client/3.13.0/git-client.hpi && \ 
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/trilead-api/1.67.vc3938a_35172f/trilead-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/ssh-credentials/305.v8f4381501156/ssh-credentials.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jakarta-mail-api/2.0.0-5/jakarta-mail-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jsch/0.1.55.2/jsch.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/plain-credentials/1.8/plain-credentials.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/apache-httpcomponents-client-4-api/4.5.13-138.v4e7d9a_7b_a_e61/apache-httpcomponents-client-4-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/credentials-binding/523.vd859a_4b_122e6/credentials-binding.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jakarta-activation-api/2.0.0-2/jakarta-activation-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/jsch/0.1.55.61.va_e9ee26616e7/jsch.hpi


-- subversion
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/subversion/2.17.1/subversion.hpi && \ 
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/mapdb-api/1.0.9.0/mapdb-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/caffeine-api/2.9.3-65.v6a_47d0f4d1fe/caffeine-api.hpi && \
java -jar jenkins-cli.jar -s http://192.168.205.128:8080 install-plugin https://updates.jenkins-ci.org/download/plugins/cloudbees-folder/6.740.ve4f4ffa_dea_54/cloudbees-folder.hpi

```
- restart 필요 , plugin 설치 현황 확인

6. Jenkins JDK, MAVEN 설정
```
JAVA_HOME=/usr/lib/jvm/openlogic-openjdk-8-hotspot
MAVEN_HOME=/usr/local/maven
```

7. Jenkins 계정 UID 에 맞게 cware-sencha-cmd 빌드하기
```
# Dockerfile
# 베이스 이미지 설정
FROM centos:7

# 필수 패키지 설치
RUN yum install -y \
    git \
    curl \
    zlib-devel \
    openssl-devel \
    readline-devel \
    gcc \
    make \
    tar \
    unzip \
    bzip2 \
    && yum clean all

# Timezone 설정
ENV TZ=Asia/Seoul

# 새로운 사용자 생성
ARG USERNAME=jenkins
ARG USER_UID=1003
RUN groupadd --gid $USER_UID $USERNAME && \
    useradd --uid $USER_UID --gid $USER_UID --create-home --shell /bin/bash $USERNAME

# rbenv 설치
RUN git clone https://github.com/rbenv/rbenv.git /usr/local/rbenv && \
    echo 'export RBENV_ROOT="/usr/local/rbenv"' >> /etc/profile && \
    echo 'export PATH="/usr/local/rbenv/bin:$PATH"' >> /etc/profile && \
    echo 'eval "$(rbenv init -)"' >> /etc/profile && \
    source /etc/profile

# ruby-build 플러그인 설치
RUN git clone https://github.com/rbenv/ruby-build.git /usr/local/rbenv/plugins/ruby-build

# JDK 1.8.0_402 설치
# RUN yum install -y java-1.8.0-openjdk-devel
# openjdk RPM 다운로드 및 설치
RUN curl -o openjdk.rpm https://builds.openlogic.com/downloadJDK/openlogic-openjdk/8u402-b06/openlogic-openjdk-8u402-b06-linux-x64-el.rpm && \
    yum install -y openjdk.rpm && \
    rm openjdk.rpm

# Ruby 1.9.3-p551 설치
RUN /bin/bash -c "source /etc/profile && rbenv install 1.9.3-p551 && rbenv global 1.9.3-p551"

# Sencha Cmd 5.0.0.160 설치
RUN curl -o /tmp/SenchaCmd-5.0.0.160-linux-x64.run.zip https://cdn.sencha.com/cmd/5.0.0.160/SenchaCmd-5.0.0.160-linux-x64.run.zip && \
    unzip /tmp/SenchaCmd-5.0.0.160-linux-x64.run.zip -d /tmp && \
    chmod +x /tmp/SenchaCmd-5.0.0.160-linux-x64.run && \
    echo -e '\n\n\n\n\n\ny\n/opt\n\n' | /tmp/SenchaCmd-5.0.0.160-linux-x64.run && \
    rm -f /tmp/SenchaCmd-5.0.0.160-linux-x64.run.zip

# Sencha Cmd 설치 경로 소유자 변경
RUN chown -R jenkins:jenkins /opt/Sencha

# Sencha Cmd 설치 경로
ENV SENCHA_CMD_PATH="/opt/Sencha/Cmd/5.0.0.160"
ENV SENCHA_CMD_3_0_0="/opt/Sencha/Cmd/5.0.0.160"

# 대상 파일 경로
ENV FILE_PATH="${SENCHA_CMD_PATH}/sencha.cfg"

# 대체할 문자열
ENV SEARCH_STRING="-Xms128m -Xmx1024m"
ENV REPLACE_STRING="-Xms512m -Xmx4096m"

# 파일 내의 모든 문자열 치환
RUN sed -i "s/${SEARCH_STRING}/${REPLACE_STRING}/g" "${FILE_PATH}"

# 환경변수 설정
ENV PATH="/usr/local/rbenv/bin:/usr/local/rbenv/versions/1.9.3-p551/bin:/opt/Sencha/Cmd/5.0.0.160:${PATH}"

# 작업 디렉토리 설정
WORKDIR /app

# Docker 컨테이너 실행 시 자동으로 sencha build 명령어 실행
# CMD ["sencha"]
```
- docekr build
	- docker build -t cware-sencha-cmd:5.0.0.160 .
- docker run
	- docker run -it --rm -u jenkins -v $(pwd):/app cware-sencha-cmd:5.0.0.160

```
docker pull commerceware/cware-sencha-cmd:5.0.0.160

docker tag commerceware/cware-sencha-cmd:5.0.0.160 cware-sencha-cmd:5.0.0.160

docker run -it --rm -u jenkins -v $(pwd):/app cware-sencha-cmd:5.0.0.160

docker run -it --rm -u jenkins -v %cd%:/app cware-sencha-cmd:5.0.0.160
```

8. .m2/repository 라이브러리 복사
```
/var/lib/jenkins/.m2/repository

unzip repository.zip
cp -R * /var/lib/jenkins/.m2/repository
chown -R jenkins:jenkins /repository 
```

9. 프로젝트 생성 및 소스코드 연결
- svn, git 소스 접근 확인

10. pom.xml 수정하여 sencha build 수행
- war 파일위치
- 복사해서 배포
